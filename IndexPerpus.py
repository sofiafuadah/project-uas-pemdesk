# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'indexBaruu.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QWidget, QPushButton, QGridLayout, QTableView, QLineEdit,QLabel
from PyQt5.QtSql import QSqlDatabase, QSqlQuery, QSqlQueryModel
from PyQt5.QtCore import Qt, QDate
from PyQt5.QtWidgets import *

class TampilanIndex(object):
    def __init__(self):
        self.createDBConnection()
        self.Dialog = QtWidgets.QDialog()
        self.Dialog.setObjectName("Dialog")
        self.Dialog.resize(681, 599)
        self.label = QtWidgets.QLabel(self.Dialog)
        self.label.setGeometry(QtCore.QRect(0, 0, 681, 600))
        self.label.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label.setText("")
        self.label.setObjectName("label")
        self.label_3 = QtWidgets.QLabel(self.Dialog)
        self.label_3.setGeometry(QtCore.QRect(120, 50, 450, 31))
        self.label_3.setStyleSheet("font: 75 16pt \"Adobe Gothic Std B\";\n"
"color: rgb(255, 255, 0);")
        self.label_3.setObjectName("label_3")
        self.pushButton = QtWidgets.QPushButton(self.Dialog)
        self.pushButton.setGeometry(QtCore.QRect(0, 10, 121, 81))
        self.pushButton.setStyleSheet("border-radius:60px;\n"
"")
        self.pushButton.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("D:/sofia/PEMDESK/New folder (2)/logoUTM.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton.setIcon(icon)
        self.pushButton.setIconSize(QtCore.QSize(80, 80))
        self.pushButton.setObjectName("pushButton")
        self.label_2 = QtWidgets.QLabel(self.Dialog)
        self.label_2.setGeometry(QtCore.QRect(0, 0, 681, 91))
        self.label_2.setStyleSheet("background-color: rgb(0, 129, 189);")
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        self.label_4 = QtWidgets.QLabel(self.Dialog)
        self.label_4.setGeometry(QtCore.QRect(120, 30, 121, 21))
        self.label_4.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 75 12pt \"Adobe Gothic Std B\";")
        self.label_4.setObjectName("label_4")
        self.label_8 = QtWidgets.QLabel(self.Dialog)
        self.label_8.setGeometry(QtCore.QRect(30, 110, 621, 461))
        self.label_8.setStyleSheet("background-color: rgb(170, 170, 255);")
        self.label_8.setText("")
        self.label_8.setObjectName("label_8")
        self.label_7 = QtWidgets.QLabel(self.Dialog)
        self.label_7.setGeometry(QtCore.QRect(210, 120, 271, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Gothic Std B")
        font.setPointSize(14)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet("color: rgb(0, 0, 0);\n"
"font: 75 14pt \"Adobe Gothic Std B\";")
        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
        self.label_7.setObjectName("label_7")
        self.inKode = QtWidgets.QLineEdit(self.Dialog)
        self.inKode.setGeometry(QtCore.QRect(200, 170, 321, 21))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.inKode.setFont(font)
        self.inKode.setStyleSheet("background:transparent;\n"
"color:black;\n"
"border:none;\n"
"border-bottom:1px solid")
        self.inKode.setText("")
        self.inKode.setObjectName("inKode")
        self.inJudul = QtWidgets.QLineEdit(self.Dialog)
        self.inJudul.setGeometry(QtCore.QRect(200, 200, 321, 21))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.inJudul.setFont(font)
        self.inJudul.setStyleSheet("background:transparent;\n"
"color:black;\n"
"border:none;\n"
"border-bottom:1px solid")
        self.inJudul.setText("")
        self.inJudul.setObjectName("inJudul")
        self.inPenerbit = QtWidgets.QLineEdit(self.Dialog)
        self.inPenerbit.setGeometry(QtCore.QRect(200, 260, 321, 21))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.inPenerbit.setFont(font)
        self.inPenerbit.setStyleSheet("background:transparent;\n"
"color:black;\n"
"border:none;\n"
"border-bottom:1px solid")
        self.inPenerbit.setText("")
        self.inPenerbit.setObjectName("inPenerbit")
        self.kode = QtWidgets.QLabel(self.Dialog)
        self.kode.setGeometry(QtCore.QRect(100, 170, 101, 21))
        font = QtGui.QFont()
        font.setFamily("Adobe Gothic Std B")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.kode.setFont(font)
        self.kode.setStyleSheet("color: rgb(0, 0, 0);\n"
"font: 75 10pt \"Adobe Gothic Std B\";")
        self.kode.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.kode.setObjectName("kode")
        self.judul = QtWidgets.QLabel(self.Dialog)
        self.judul.setGeometry(QtCore.QRect(100, 200, 101, 21))
        font = QtGui.QFont()
        font.setFamily("Adobe Gothic Std B")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.judul.setFont(font)
        self.judul.setStyleSheet("color: rgb(0, 0, 0);\n"
"font: 75 10pt \"Adobe Gothic Std B\";")
        self.judul.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.judul.setObjectName("judul")
        self.penerbit = QtWidgets.QLabel(self.Dialog)
        self.penerbit.setGeometry(QtCore.QRect(100, 260, 101, 21))
        font = QtGui.QFont()
        font.setFamily("Adobe Gothic Std B")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.penerbit.setFont(font)
        self.penerbit.setStyleSheet("color: rgb(0, 0, 0);\n"
"font: 75 10pt \"Adobe Gothic Std B\";")
        self.penerbit.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.penerbit.setObjectName("penerbit")
        self.penulis = QtWidgets.QLabel(self.Dialog)
        self.penulis.setGeometry(QtCore.QRect(100, 230, 101, 21))
        font = QtGui.QFont()
        font.setFamily("Adobe Gothic Std B")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.penulis.setFont(font)
        self.penulis.setStyleSheet("color: rgb(0, 0, 0);\n"
"font: 75 10pt \"Adobe Gothic Std B\";")
        self.penulis.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.penulis.setObjectName("penulis")
        self.tambah = QtWidgets.QPushButton(self.Dialog)
        self.tambah.setGeometry(QtCore.QRect(100, 300, 91, 21))
        self.tambah.setStyleSheet("background-color: rgb(0, 109, 159);\n"
"font: 63 8pt \"Lucida Fax\";\n"
"")
        self.tambah.setObjectName("tambah")
        self.inPenulis = QtWidgets.QLineEdit(self.Dialog)
        self.inPenulis.setGeometry(QtCore.QRect(200, 230, 321, 21))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.inPenulis.setFont(font)
        self.inPenulis.setStyleSheet("background:transparent;\n"
"color:black;\n"
"border:none;\n"
"border-bottom:1px solid")
        self.inPenulis.setText("")
        self.inPenulis.setObjectName("inPenulis")
        self.tampil = QtWidgets.QPushButton(self.Dialog)
        self.tampil.setGeometry(QtCore.QRect(200, 300, 321, 21))
        self.tampil.setStyleSheet("background-color: rgb(0, 109, 159);\n"
"font: 63 8pt \"Lucida Fax\";\n"
"")
        self.tampil.setObjectName("tampil")
        self.hapus = QtWidgets.QPushButton(self.Dialog)
        self.hapus.setGeometry(QtCore.QRect(530, 300, 91, 21))
        self.hapus.setStyleSheet("background-color: rgb(0, 109, 159);\n"
"font: 63 8pt \"Lucida Fax\";\n"
"")
        self.hapus.setObjectName("hapus")
        self.btCari = QtWidgets.QPushButton(self.Dialog)
        self.btCari.setGeometry(QtCore.QRect(530, 330, 91, 21))
        self.btCari.setStyleSheet("background-color: rgb(0, 109, 159);\n"
"font: 63 8pt \"Lucida Fax\";\n"
"")
        self.btCari.setObjectName("btCari")
        self.cari = QtWidgets.QLabel(self.Dialog)
        self.cari.setGeometry(QtCore.QRect(100, 330, 91, 16))
        font = QtGui.QFont()
        font.setFamily("Lucida Fax")
        font.setPointSize(9)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(7)
        self.cari.setFont(font)
        self.cari.setStyleSheet("font: 63 9pt \"Lucida Fax\";")
        self.cari.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.cari.setObjectName("cari")
        self.inCari = QtWidgets.QLineEdit(self.Dialog)
        self.inCari.setGeometry(QtCore.QRect(200, 330, 321, 21))
        self.inCari.setStyleSheet("font: 63 8pt \"Lucida Fax\";")
        self.inCari.setObjectName("inCari")
        self.edit = QtWidgets.QPushButton(self.Dialog)
        self.edit.setGeometry(QtCore.QRect(100, 360, 91, 21))
        self.edit.setStyleSheet("background-color: rgb(0, 109, 159);\n"
"font: 63 8pt \"Lucida Fax\";\n"
"")
        self.edit.setObjectName("edit")
        self.btUpdate = QtWidgets.QPushButton(self.Dialog)
        self.btUpdate.setGeometry(QtCore.QRect(200, 360, 321, 21))
        self.btUpdate.setStyleSheet("background-color: rgb(0, 109, 159);\n"
"font: 63 8pt \"Lucida Fax\";\n"
"")
        self.btUpdate.setObjectName("update")
        self.tableView = QtWidgets.QTableView(self.Dialog)
        self.tableView.setGeometry(QtCore.QRect(30, 391, 621, 181))
        self.tableView.setStyleSheet("background-color: rgb(170, 170, 255);")
        self.tableView.setObjectName("tableView")
        self.tableView.horizontalHeader().setStretchLastSection(True)
        self.tableView.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)
        self.label.raise_()
        self.label_2.raise_()
        self.label_4.raise_()
        self.label_3.raise_()
        self.pushButton.raise_()
        self.label_8.raise_()
        self.label_7.raise_()
        self.inKode.raise_()
        self.inJudul.raise_()
        self.inPenerbit.raise_()
        self.kode.raise_()
        self.judul.raise_()
        self.penerbit.raise_()
        self.penulis.raise_()
        self.tambah.raise_()
        self.inPenulis.raise_()
        self.tampil.raise_()
        self.hapus.raise_()
        self.btCari.raise_()
        self.cari.raise_()
        self.inCari.raise_()
        self.edit.raise_()
        self.btUpdate.raise_()
        self.tableView.raise_()

        self.retranslateUi(self.Dialog)
        QtCore.QMetaObject.connectSlotsByName(self.Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Data Buku Perpustakaan"))
        self.label_3.setText(_translate("Dialog", "Perpustakaan Universitas Trunojoyo"))
        self.label_4.setText(_translate("Dialog", "Selamat Datang"))
        self.label_7.setText(_translate("Dialog", "DATA BUKU PERPUSTAKAAN"))
        self.inKode.setPlaceholderText(_translate("Dialog", "Kode Buku"))
        self.inJudul.setPlaceholderText(_translate("Dialog", "Judul Buku"))
        self.inPenerbit.setPlaceholderText(_translate("Dialog", "Penerbit"))
        self.kode.setText(_translate("Dialog", "Kode Buku        :"))
        self.judul.setText(_translate("Dialog", "Judul Buku        :"))
        self.penerbit.setText(_translate("Dialog", "Penerbit             :"))
        self.penulis.setText(_translate("Dialog", "Penulis               :"))
        self.tambah.setText(_translate("Dialog", "Tambah Data"))
        self.inPenulis.setPlaceholderText(_translate("Dialog", "Penulis"))
        self.tampil.setText(_translate("Dialog", "Tampilkan Semua Data"))
        self.hapus.setText(_translate("Dialog", "Hapus Data"))
        self.btCari.setText(_translate("Dialog", "Cari"))
        self.cari.setText(_translate("Dialog", "Cari"))
        self.inCari.setPlaceholderText(_translate("Dialog", "Masukkan kata pencarian"))
        self.edit.setText(_translate("Dialog", "Edit"))
        self.btUpdate.setText(_translate("Dialog", "Update Data"))

        #membuat signal and slot
        self.tambah.clicked.connect(self.tambahData)
        self.tampil.clicked.connect(self.tampilData)
        self.btCari.clicked.connect(self.filter)
        self.hapus.clicked.connect(self.hapusData)
        self.edit.clicked.connect(self.updateData)

    def tambahData(self):
        self.kode = str(self.inKode.text())
        self.judul = str(self.inJudul.text())
        self.penulis = str(self.inPenulis.text())
        self.penerbit = str(self.inPenerbit.text())
        # Mendefinisikan Query
        query = QSqlQuery()
        sql = "INSERT INTO DataPerpus VALUES ('{0}','{1}','{2}', '{3}')".format(self.kode, self.judul, self.penulis, self.penerbit)
        # Mengecek apakah query berjalan dengan baik
        if query.exec_(sql):
            print("Penambahan data berhasil!")
            self.inKode.setText("")
            self.inJudul.setText("")
            self.inPenulis.setText("")
            self.inPenerbit.setText("")
            # Menampilkan Data
            self.tampilData()
        else:
            print("Insert Error: ", query.lastError().text())

    # Slot Saat Menampilkan Data
    def tampilData(self):
        # Membuat Model
        model = QSqlQueryModel()
        # Memanggil Fungsi View
        self.tampilDataView("DataPerpus", model)

    def filter(self):
        # Membuat Model
        model = QSqlQueryModel()
        # Mengambil Inputan filter
        filt = str(self.inCari.text())
        self.tampilDataView("DataPerpus",model,filt)

    def hapusData(self):
        # Mengambil Data Yang Di klik
        index = self.tableView.selectedIndexes()[0]
        kode = str(self.tableView.model().data(index))
        # Mendefinisikan Query
        query = QSqlQuery()
        # Menjalankan Perintah Query
        query.prepare("DELETE from DataPerpus WHERE kode = :kode")
        query.bindValue(":kode", kode)
        query.exec_()
        if query.exec_():
            print("Hapus data berhasil!")
            self.tampilData()
        else:
            print("Delete Error: ", query.lastError().text())


    def tampilDataView(self, title, model, filt = ""):
        # Mengecek Apakah Ada Perintah Mencari Data
        if filt == "":
            sql = "SELECT * FROM DataPerpus"
            print(sql)
        else:
            sql = "SELECT * FROM DataPerpus WHERE judul LIKE '%"+str(filt)+"%'"
            self.inCari.setText("")
        # Mengeksekusi Model Query
        model.setQuery(sql)
        # Membuat Header Table view
        model.setHeaderData(0, Qt.Horizontal, "Kode Buku ")
        model.setHeaderData(1, Qt.Horizontal, "Judul Buku")
        model.setHeaderData(2, Qt.Horizontal, "Penulis")
        model.setHeaderData(3, Qt.Horizontal, "Penerbit")


        # Mengeset Data Model Ke table view
        self.tableView.setModel(model)
        self.tableView.setWindowTitle(title)
        return self.tableView
    
    def updateData(self):
        # Mengambil Data Yang Di klik
        index = self.tableView.selectedIndexes()[0]
        kode = str(self.tableView.model().data(index))
        # Mendefinisikan Query
        query = QSqlQuery()
        # Menjalankan Perintah Query
        query.prepare("Select * from DataPepus WHERE kode = : kode")
        query.bindValue(":kode", self.kode)
        query.exec_()
        if query.exec_():
            while query.next():
                self.inKode.setText(query.value(0))
                self.inJudul.setText(query.value(1))
                self.inPenulis.setText(str(query.value(2)))
                self.inPenerbit.setText(str(query.value(3)))
            self.btUpdate.clicked.connect(self.update)
        else:
            print("del_records Error: ", query.lastError().text())
            
    def update(self):
        # Mengambil Text inputan
        kode = str(self.inKode.text())
        judul = str(self.inJudul.text())
        penulis = str(self.inPenulis.text())
        penerbit = str(self.inPenerbit.text())
        # Mendefinisikan Query
        query = QSqlQuery()
        # Menjalankan Perintah Sql Update Dengan Binding
        query.prepare("UPDATE DataPerpus SET judul = :judul,penulis = :penulis,penerbit = :penerbit where kode = :kode")
        # Binding value karena di python string literal nya kurang bagus
        query.bindValue(":kode", self.kode)
        query.bindValue(":judul", self.judul)
        query.bindValue(":penulis", self.penulis)
        query.bindValue(":penerbit", self.penerbit)

        # Mengecek apakah query berjalan dengan baik
        if query.exec_():
            print("Update data berhasil!")
            self.inKode.setText("")
            self.inJudul.setText("")
            self.inPenulis.setText("")
            self.inPenerbit.setText("")
            # Menampilkan Data
            self.tampilData()
        else:
            print("Insert Error: ", query.lastError().text())
            
    def show(self):
        self.Dialog.exec()        

    def createDBConnection(self):
        # Membuat Database Dan Memilih Jenis DB
        self.db = QSqlDatabase.addDatabase("QSQLITE")
        # Membuat nama database
        self.db.setDatabaseName('DataPerpus.db')
        # Mengecek Database Apakah koneksi nya terbuka
        if self.db.open():
            print('Berhasil membuat Database')
            # Mendefiniskan Query
            query = QSqlQuery()
            # Menjalankan Perintah DDL atau membuat table
            query.exec_("CREATE TABLE IF NOT EXISTS DataPerpus (kode varchar(20), "
                        "judul varchar(50), penulis varchar(30), penerbit varchar(30))")
            print('Berhasil membuat Table')
        else:
            print('Gagal membuat Database!')
            
            
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Index = TampilanIndex()
    Index.show()
    sys.exit(app.exec_())
